{"version":3,"sources":["components/Square.jsx","components/Board.jsx","components/Game.jsx","index.js"],"names":["Square","_ref","value","onClick","react_default","a","createElement","className","Board","squares","renderSquare","i","components_Square","Game","status","_useState","useState","history","Array","fill","stepNumber","xIsNext","_useState2","Object","slicedToArray","gameState","setGameState","current","winner","calculateWinner","moves","map","step","move","desc","concat","key","Fragment","components_Board","slice","length","handleClick","lines","_lines$i","b","c","container","document","getElementById","createRoot","render","components_Game"],"mappings":"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","file":"static/js/main.85bee211.chunk.js","sourcesContent":["import React from 'react'\n\nconst Square = ({value, onClick}) => {\n    \n    return (\n        <button className={`square`} onClick={onClick}>\n            <span className={value}>{value}</span>\n        </button>\n    );\n}\n\nexport default Square;","import React from 'react'\nimport Square from \"./Square\";\n\nconst Board = ({squares, onClick}) => {\n\n    const renderSquare = (i) => {\n        return (\n            <Square\n                value={squares[i]}\n                onClick={() => onClick(i)}\n            />\n        );\n    };\n\n    \n\n    return (\n        <div>\n            <div className=\"board-row\">\n                {renderSquare(0)}\n                {renderSquare(1)}\n                {renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n                {renderSquare(3)}\n                {renderSquare(4)}\n                {renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n                {renderSquare(6)}\n                {renderSquare(7)}\n                {renderSquare(8)}\n            </div>\n        </div>\n    );\n};\n\nexport default Board;\n\n","import React, { useState } from \"react\";\nimport Board from './Board';\n\n\nconst Game = () => {\n    \n    const [gameState, setGameState] = useState({\n        history: [\n            {\n            squares: Array(9).fill(null),\n            }\n        ],\n        stepNumber: 0,\n        xIsNext: true\n    });\n\n    const handleClick = (i) => {\n        const history = gameState.history.slice(0, gameState.stepNumber + 1);\n        const current = history[history.length - 1];\n        \n        // Creates a copy of the squares array in the state object\n        const squares = current.squares.slice();\n        \n        // If there is already a winner, or the box has already\n        // been clicked, ignore the click and return early\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        // Replaces the value at the specific with either an 'X' or \n        // an 'O' and changes which player is next\n        squares[i] = gameState.xIsNext ? \"X\" : \"O\";\n        // Updates the state object\n        setGameState({\n            history: history.concat([\n                {\n                squares: squares\n                }\n            ]),\n            stepNumber: history.length,\n            xIsNext: !gameState.xIsNext\n        });\n    };\n\n    const jumpTo = (step) => {\n        setGameState({\n            history: history,\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        });\n    }\n\n    // Updates status message to show which player is next\n    const history = gameState.history;\n    const current = history[gameState.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n        const desc = move\n            ? `Go to move # ${move}`\n            : `Go to game start`;\n        return (\n            <li key={move}>\n                <button \n                    onClick={() => jumpTo(move)}\n                    className=\"history-button\"\n                >\n                    {desc}\n                </button>\n            </li>\n        );\n    });\n    \n    let status;\n    if (winner) {\n        status = `Winner: ${winner}`\n    } else {\n        status = `Next player: ${gameState.xIsNext ? \"X\" : \"O\"}`\n    }\n\n    return (\n        <>\n            <h1>Tic Tac Toe</h1>\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board \n                        squares={current.squares}\n                        onClick={i => handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div className=\"status\">{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Game;\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (\n            squares[a] &&\n            squares[a] === squares[b] &&\n            squares[a] === squares[c]\n        ) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n","import React from 'react'\nimport { createRoot } from 'react-dom/client';\nimport Game from './components/Game';\nimport './styles/index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <Game />,\n);\n"],"sourceRoot":""}